{"ast":null,"code":"import i18n from \"i18next\";\nimport { reactI18nextModule } from \"react-i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport translationEN from './locales/en/translation.json';\nimport translationTR from './locales/tr/translation.json'; // the translations\n\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n  tr: {\n    translation: translationTR\n  }\n};\ni18n.use(detector).use(reactI18nextModule) // passes i18n down to react-i18next\n.init({\n  resources,\n  fallbackLng: \"en\",\n  // use en if detected lng is not available\n  keySeparator: false,\n  // we do not use keys in form messages.welcome\n  interpolation: {\n    escapeValue: false // react already safes from xss\n\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["/Users/azizcetin/Desktop/PersonalProject/scorp-assignment/src/i18n.js"],"names":["i18n","reactI18nextModule","detector","translationEN","translationTR","resources","en","translation","tr","use","init","fallbackLng","keySeparator","interpolation","escapeValue"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,kBAAT,QAAmC,eAAnC;AAEA,OAAOC,QAAP,MAAqB,kCAArB;AAEA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B,C,CAEA;;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,EAAE,EAAE;AACAC,IAAAA,WAAW,EAAEJ;AADb,GADU;AAIdK,EAAAA,EAAE,EAAE;AACJD,IAAAA,WAAW,EAAEH;AADT;AAJU,CAAlB;AASAJ,IAAI,CACDS,GADH,CACOP,QADP,EAEGO,GAFH,CAEOR,kBAFP,EAE2B;AAF3B,CAGGS,IAHH,CAGQ;AACJL,EAAAA,SADI;AAEJM,EAAAA,WAAW,EAAE,IAFT;AAEe;AAEnBC,EAAAA,YAAY,EAAE,KAJV;AAIiB;AAErBC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACM;;AADN;AANX,CAHR;AAcA,eAAed,IAAf","sourcesContent":["import i18n from \"i18next\";\nimport { reactI18nextModule } from \"react-i18next\";\n\nimport detector from \"i18next-browser-languagedetector\";\n\nimport translationEN from './locales/en/translation.json';\nimport translationTR from './locales/tr/translation.json';\n\n// the translations\nconst resources = {\n    en: {\n        translation: translationEN\n      },\n    tr: {\n    translation: translationTR\n    }\n};\n\ni18n\n  .use(detector)\n  .use(reactI18nextModule) // passes i18n down to react-i18next\n  .init({\n    resources,\n    fallbackLng: \"en\", // use en if detected lng is not available\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\nexport default i18n;"]},"metadata":{},"sourceType":"module"}