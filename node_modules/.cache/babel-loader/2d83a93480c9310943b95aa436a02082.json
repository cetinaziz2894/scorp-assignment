{"ast":null,"code":"var _jsxFileName = \"/Users/azizcetin/Desktop/PersonalProject/scorp-app/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useState } from 'react';\nimport { Button, Modal, Alert, Form, Container } from \"react-bootstrap\";\nimport { UserContext } from '../context/UserContext';\nimport { countryList } from '../data/countryList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  hideHandler,\n  show\n}) {\n  _s();\n\n  let context = useContext(UserContext);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleValidation = () => {\n    let formValid = true; //Password\n\n    if (!context.userInfo.password) {\n      setErrorMessage(\"Password cannot be empty\");\n      formValid = false;\n    } //Email\n\n\n    if (!context.userInfo.email) {\n      setErrorMessage(\"Email cannot be empty\");\n      formValid = false;\n    }\n\n    if (typeof context.userInfo.email !== \"undefined\") {\n      let lastAtPos = context.userInfo.email.lastIndexOf('@');\n      let lastDotPos = context.userInfo.email.lastIndexOf('.');\n\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && context.userInfo.email.indexOf('@@') === -1 && lastDotPos > 2 && context.userInfo.email.length - lastDotPos > 2)) {\n        setErrorMessage(\"Email is not valid\");\n        formValid = false;\n      }\n    } //Name\n\n\n    if (!context.userInfo.name) {\n      setErrorMessage(\"Name cannot be empty\");\n      formValid = false;\n    }\n\n    return formValid;\n  };\n\n  const submitHandler = () => {\n    if (handleValidation()) {\n      setErrorMessage(null);\n      hideHandler(false);\n      console.log(context);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      className: \"d-flex align-items-center justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formGroupName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Name\",\n              onChange: e => {\n                e.preventDefault();\n                context.updateUserInfo({ ...context.userInfo,\n                  name: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formGroupEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              onChange: e => {\n                e.preventDefault();\n                context.updateUserInfo({ ...context.userInfo,\n                  email: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formGroupLocale\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Locale\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              defaultValue: context === null || context === void 0 ? void 0 : context.locale,\n              onChange: e => {\n                e.preventDefault();\n                context.updateUserInfo({ ...context.userInfo,\n                  locale: e.target.value\n                });\n              },\n              children: countryList.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: country.id,\n                children: country.name\n              }, country.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formGroupPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\",\n              onChange: e => {\n                e.preventDefault();\n                context.updateUserInfo({ ...context.userInfo,\n                  password: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: 'danger',\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"btn btn-danger btn-lg btn-block\",\n        onClick: () => hideHandler(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"btn btn-primary btn-lg btn-block\",\n        onClick: () => submitHandler(),\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"rXarUBkthE3CC6mUhU1za2S5xGA=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/azizcetin/Desktop/PersonalProject/scorp-app/src/components/Login.js"],"names":["React","useContext","useState","Button","Modal","Alert","Form","Container","UserContext","countryList","Login","hideHandler","show","context","errorMessage","setErrorMessage","handleValidation","formValid","userInfo","password","email","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","name","submitHandler","console","log","e","preventDefault","updateUserInfo","target","value","locale","map","country","id"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport { useState } from 'react';\nimport {\n    Button,\n    Modal,\n    Alert,\n    Form,\n    Container\n  } from \"react-bootstrap\";\nimport { UserContext } from '../context/UserContext';\nimport { countryList } from '../data/countryList';\n\nexport default function Login({hideHandler, show}) {\n\n    let context = useContext(UserContext);\n\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const handleValidation = () => {\n        let formValid = true;\n        //Password\n        if(!context.userInfo.password){\n            setErrorMessage(\"Password cannot be empty\");\n            formValid = false;\n        }\n\n        //Email\n        if(!context.userInfo.email){\n          setErrorMessage(\"Email cannot be empty\");\n          formValid = false;\n        }\n        if(typeof context.userInfo.email !== \"undefined\"){\n          let lastAtPos = context.userInfo.email.lastIndexOf('@');\n          let lastDotPos = context.userInfo.email.lastIndexOf('.');\n          if (!(lastAtPos < lastDotPos && lastAtPos > 0 && context.userInfo.email.indexOf('@@') === -1 && lastDotPos > 2 && (context.userInfo.email.length - lastDotPos) > 2)) {\n            setErrorMessage(\"Email is not valid\");\n            formValid = false;\n          }\n        }\n\n        //Name\n        if(!context.userInfo.name){\n            setErrorMessage(\"Name cannot be empty\");\n            formValid = false;\n        }\n        return formValid;\n    }\n\n    const submitHandler = () => {\n        if(handleValidation()){\n            setErrorMessage(null);\n            hideHandler(false);\n            console.log(context);\n        }\n    }\n    return (\n        <Modal show={show}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            >\n            <Modal.Header className=\"d-flex align-items-center justify-content-center\">\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                Login\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Container>\n                <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupName\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Name\" onChange={e => {\n                                    e.preventDefault();\n                                    context.updateUserInfo({...context.userInfo, name:e.target.value})\n                                }}/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={e => {\n                                    e.preventDefault();\n                                    context.updateUserInfo({...context.userInfo, email:e.target.value})\n                                }}/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupLocale\">\n                    <Form.Label>Locale</Form.Label>\n                        <Form.Select \n                                    defaultValue={context?.locale} \n                                    onChange={e => {\n                                    e.preventDefault();\n                                    context.updateUserInfo({...context.userInfo, locale:e.target.value})\n                                }}>\n                            {countryList.map((country) => (\n                                <option key={country.id} value={country.id}>{country.name}</option>\n                            ))}\n                        </Form.Select>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => {\n                                    e.preventDefault();\n                                    context.updateUserInfo({...context.userInfo, password:e.target.value})\n                                }}/>\n                    </Form.Group>\n                    {\n                        errorMessage && <Alert variant={'danger'}>\n                            {errorMessage}\n                        </Alert>\n                    }\n                </Form>\n                </Container>\n            </Modal.Body>\n            <Modal.Footer>     \n                <Button type=\"submit\" className=\"btn btn-danger btn-lg btn-block\" onClick={() => hideHandler(false)}>Cancel</Button>\n                <Button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\" onClick={() => submitHandler()}>Log in</Button>\n            </Modal.Footer>\n            </Modal>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}