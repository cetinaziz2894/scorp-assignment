{"ast":null,"code":"var _jsxFileName = \"/Users/azizcetin/Desktop/PersonalProject/scorp-app/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { Button, Modal, Alert, Form, Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  hide,\n  show\n}) {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleValidation = () => {\n    let formValid = true; //Password\n\n    if (!password) {\n      setErrorMessage(\"Password cannot be empty\");\n      formValid = false;\n    } //Email\n\n\n    if (!email) {\n      setErrorMessage(\"Email cannot be empty\");\n      formValid = false;\n    }\n\n    if (typeof email !== \"undefined\") {\n      let lastAtPos = email.lastIndexOf('@');\n      let lastDotPos = email.lastIndexOf('.');\n\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && email.indexOf('@@') === -1 && lastDotPos > 2 && email.length - lastDotPos > 2)) {\n        setErrorMessage(\"Email is not valid\");\n        formValid = false;\n      }\n    }\n\n    return formValid;\n  };\n\n  const submitHandler = () => {\n    if (handleValidation()) {\n      hide(false);\n      console.log(email, password);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      className: \"d-flex align-items-center justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formGroupEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              onChange: e => {\n                e.preventDefault();\n                setEmail(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formGroupPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\",\n              onChange: e => {\n                e.preventDefault();\n                setPassword(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: 'danger',\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"btn btn-danger btn-lg btn-block\",\n        onClick: () => hide(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"btn btn-primary btn-lg btn-block\",\n        onClick: () => submitHandler(),\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"vCdy976iCYAhhl9FP1KDiOEOcB0=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/azizcetin/Desktop/PersonalProject/scorp-app/src/components/Login.js"],"names":["React","useState","Button","Modal","Alert","Form","Container","Login","hide","show","email","setEmail","password","setPassword","errorMessage","setErrorMessage","handleValidation","formValid","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","submitHandler","console","log","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport {\n    Button,\n    Modal,\n    Alert,\n    Form,\n    Container\n  } from \"react-bootstrap\";\n\nexport default function Login({hide, show}) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState(null);\n    const handleValidation = () => {\n        let formValid = true;\n        //Password\n        if(!password){\n            setErrorMessage(\"Password cannot be empty\");\n            formValid = false;\n        }\n\n        //Email\n        if(!email){\n          setErrorMessage(\"Email cannot be empty\");\n          formValid = false;\n        }\n        if(typeof email !== \"undefined\"){\n          let lastAtPos = email.lastIndexOf('@');\n          let lastDotPos = email.lastIndexOf('.');\n          if (!(lastAtPos < lastDotPos && lastAtPos > 0 && email.indexOf('@@') === -1 && lastDotPos > 2 && (email.length - lastDotPos) > 2)) {\n            setErrorMessage(\"Email is not valid\");\n            formValid = false;\n          }\n        }\n        return formValid;\n    }\n\n    const submitHandler = () => {\n        if(handleValidation()){\n            hide(false);\n            console.log(email,password)\n        }\n    }\n    return (\n        <Modal show={show}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            >\n            <Modal.Header className=\"d-flex align-items-center justify-content-center\">\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                Login\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Container>\n                <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={e => {\n                                    e.preventDefault();\n                                    setEmail(e.target.value)\n                                }}/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => {\n                                    e.preventDefault();\n                                    setPassword(e.target.value)\n                                }}/>\n                    </Form.Group>\n                    {\n                        errorMessage && <Alert variant={'danger'}>\n                            {errorMessage}\n                        </Alert>\n                    }\n                </Form>\n                </Container>\n            </Modal.Body>\n            <Modal.Footer>     \n                <Button type=\"submit\" className=\"btn btn-danger btn-lg btn-block\" onClick={() => hide(false)}>Cancel</Button>\n                <Button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\" onClick={() => submitHandler()}>Sign in</Button>\n            </Modal.Footer>\n            </Modal>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}