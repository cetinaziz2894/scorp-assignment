{"ast":null,"code":"var _jsxFileName = \"/Users/azizcetin/Desktop/PersonalProject/scorp-app/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useState } from 'react';\nimport { Button, Modal, Alert, Form, Container } from \"react-bootstrap\";\nimport { Context } from '../context/Context';\nimport { countryList } from '../data/countryList';\nimport { withNamespaces } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login({\n  hideHandler,\n  show,\n  t\n}) {\n  _s();\n\n  const {\n    userInfo,\n    setUserInfo\n  } = useContext(Context);\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [locale, setLocale] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleValidation = () => {\n    let formValid = true; //Password\n\n    if (!password) {\n      setErrorMessage(\"Password cannot be empty\");\n      formValid = false;\n    } //Email\n\n\n    if (!email) {\n      setErrorMessage(\"Email cannot be empty\");\n      formValid = false;\n    }\n\n    if (typeof email !== \"undefined\") {\n      let lastAtPos = email === null || email === void 0 ? void 0 : email.lastIndexOf('@');\n      let lastDotPos = email === null || email === void 0 ? void 0 : email.lastIndexOf('.');\n\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && (email === null || email === void 0 ? void 0 : email.indexOf('@@')) === -1 && lastDotPos > 2 && (email === null || email === void 0 ? void 0 : email.length) - lastDotPos > 2)) {\n        setErrorMessage(\"Email is not valid\");\n        formValid = false;\n      }\n    } //Name\n\n\n    if (!userName) {\n      setErrorMessage(\"Name cannot be empty\");\n      formValid = false;\n    }\n\n    return formValid;\n  };\n\n  const submitHandler = () => {\n    if (handleValidation()) {\n      setErrorMessage(null);\n      hideHandler(false);\n      setUserInfo({ ...userInfo,\n        email: email,\n        name: userName,\n        locale: locale,\n        password: password\n      });\n      setUserName(null);\n      setEmail(null);\n      setLocale(null);\n      setPassword(null);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      className: \"d-flex align-items-center justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: t('Login')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formGroupName1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: t('Name')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Name\",\n              onChange: e => {\n                e.preventDefault();\n                setUserName(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formGroupEmail1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: t('Email')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              onChange: e => {\n                e.preventDefault();\n                setEmail(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formGroupLocale\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: t('Locale')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              defaultValue: userInfo === null || userInfo === void 0 ? void 0 : userInfo.locale,\n              onChange: e => {\n                e.preventDefault();\n                setLocale(e.target.value);\n              },\n              children: countryList.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: country.value,\n                children: country.label\n              }, country.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formGroupPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: t('Password')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\",\n              onChange: e => {\n                e.preventDefault();\n                setPassword(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: 'danger',\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"btn btn-danger btn-block\",\n        onClick: () => hideHandler(false),\n        children: t('Cancel')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block\",\n        onClick: () => submitHandler(),\n        children: t('Login')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"71oefMfpdgedbSWXWZYWtsmFO6M=\");\n\n_c = Login;\nexport default withNamespaces()(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/azizcetin/Desktop/PersonalProject/scorp-app/src/components/Login.js"],"names":["React","useContext","useState","Button","Modal","Alert","Form","Container","Context","countryList","withNamespaces","Login","hideHandler","show","t","userInfo","setUserInfo","userName","setUserName","email","setEmail","locale","setLocale","password","setPassword","errorMessage","setErrorMessage","handleValidation","formValid","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","submitHandler","name","e","preventDefault","target","value","map","country","label"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport { useState } from 'react';\nimport {\n    Button,\n    Modal,\n    Alert,\n    Form,\n    Container\n  } from \"react-bootstrap\";\nimport { Context } from '../context/Context';\nimport { countryList } from '../data/countryList';\n\nimport { withNamespaces } from 'react-i18next';\n\nfunction Login({hideHandler, show, t}) {\n\n    const {userInfo, setUserInfo} = useContext(Context);\n    const [userName, setUserName] = useState('');\n    const [email, setEmail] = useState('');\n    const [locale, setLocale] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const handleValidation = () => {\n        let formValid = true;\n        //Password\n        if(!password){\n            setErrorMessage(\"Password cannot be empty\");\n            formValid = false;\n        }\n\n        //Email\n        if(!email){\n          setErrorMessage(\"Email cannot be empty\");\n          formValid = false;\n        }\n        if(typeof email !== \"undefined\"){\n          let lastAtPos = email?.lastIndexOf('@');\n          let lastDotPos = email?.lastIndexOf('.');\n          if (!(lastAtPos < lastDotPos && lastAtPos > 0 && email?.indexOf('@@') === -1 && lastDotPos > 2 && (email?.length - lastDotPos) > 2)) {\n            setErrorMessage(\"Email is not valid\");\n            formValid = false;\n          }\n        }\n\n        //Name\n        if(!userName){\n            setErrorMessage(\"Name cannot be empty\");\n            formValid = false;\n        }\n        return formValid;\n    }\n\n    const submitHandler = () => {\n        if(handleValidation()){\n            setErrorMessage(null);\n            hideHandler(false);\n            setUserInfo({...userInfo,email:email, name:userName, locale:locale, password:password});\n            setUserName(null);\n            setEmail(null);\n            setLocale(null);\n            setPassword(null);\n        }\n    }\n    return (\n        <Modal show={show}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            >\n            <Modal.Header className=\"d-flex align-items-center justify-content-center\">\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                {t('Login')}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Container>\n                <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupName1\">\n                        <Form.Label>{t('Name')}</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Name\" onChange={e => {\n                                    e.preventDefault();\n                                    setUserName(e.target.value);\n                                }}/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupEmail1\">\n                        <Form.Label>{t('Email')}</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={e => {\n                                    e.preventDefault();\n                                    setEmail(e.target.value);\n                                }}/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupLocale\">\n                    <Form.Label>{t('Locale')}</Form.Label>\n                        <Form.Select \n                                    defaultValue={userInfo?.locale} \n                                    onChange={e => {\n                                    e.preventDefault();\n                                    setLocale(e.target.value);\n                                }}>\n                            {countryList.map((country) => (\n                                <option key={country.value} value={country.value}>{country.label}</option>\n                            ))}\n                        </Form.Select>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n                        <Form.Label>{t('Password')}</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => {\n                                    e.preventDefault();\n                                    setPassword(e.target.value)\n                                }}/>\n                    </Form.Group>\n                    {\n                        errorMessage && <Alert variant={'danger'}>\n                            {errorMessage}\n                        </Alert>\n                    }\n                </Form>\n                </Container>\n            </Modal.Body>\n            <Modal.Footer>     \n                <Button type=\"submit\" className=\"btn btn-danger btn-block\" onClick={() => hideHandler(false)}>{t('Cancel')}</Button>\n                <Button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={() => submitHandler()}>{t('Login')}</Button>\n            </Modal.Footer>\n            </Modal>\n    )\n}\nexport default withNamespaces()(Login)"]},"metadata":{},"sourceType":"module"}